#!/bin/bash
####################Define functions.####################
##Functions to set terminal font colors.##
_green() {
	tput setaf 2
}
_blue() {
	tput setaf 4
}
_white() {
	tput setaf 7
}
_bold() {
	tput bold
}
#Function to reset to default color.
_tset() {
	tput sgr 0
}

##Other functions.##
#Function to echo [message] in blue.
_echecho () {
	_blue
	printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' =
	echo -e "$1..."
	printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -
}
#Function to show ascii splash image in blue.
_darkcoinascii () {
	echo -e "\e[0;34m$1"
	sleep 0.1
}
#Function to check if a package is installed,
#and if not, install it with 'pacman'.
_pacman() {
	if [[ -z $(ls /bin | grep $1) ]] ; then
		if [[ -z $2 ]] ; then
			pkg=$1
		else
			pkg=$2
		fi
		sudo pacman -S $pkg --color always
	fi
}
#Function to check if a package is installed,
#and if not, install it with 'apt-get'.
_buntuman() {
	if [[ -z $(ls /bin | grep $1) ]] ; then
		if [[ -z $2 ]] ; then
			pkg=$1
		else
			pkg=$2
		fi
		sudo apt-get install -yr $pkg
	fi
}
#Function to download scripts for the local distribution,
#place them in the $HOME directory,
#and make them executable.
_darkclone() {
	_blue
	case $1 in 
		Arch)
			dabv="arch-sgminer"
			_pacman git
			;;
		Ubuntu)
			dabv="sgminer"
			_buntuman git
			;;
	esac
	cd ~
	if [ ! -d "sgminer-install-scripts" ] ; then
		git clone https://github.com/snogcel/sgminer-install-scripts
	fi
	mv -f sgminer-install-scripts/${dabv}*.in .
	chmod +x *.in
	rm -rf sgminer-install-scripts
}
####################Start script.####################
#Print Darkcoin ascii.
_darkcoinascii '    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
_darkcoinascii '      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
_darkcoinascii '        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
_darkcoinascii '          \\\\\\\\\\\\\\\\\\\\\\\\\\                                  \\\\\\\\\\\\\\\\'
_darkcoinascii '\\\\\\\\\\\\\\\\\\   \\\\\\\\\\\\\\\\\\\\\\                                  \\\\\\\\\\\\\\\\'
_darkcoinascii '  \\\\\\\\\\\\\\\\\\   \\\\\\\\\\\\\\\\\\                                  \\\\\\\\\\\\\\\\'
_darkcoinascii '    \\\\\\\\\\\\\\\\\\   \\\\\\\\\\\\\\                                  \\\\\\\\\\\\\\\\'
_darkcoinascii '      \\\\\\\\\\\\\\\\\\   \\\\\\\\\\                                  \\\\\\\\\\\\\\\\'
_darkcoinascii '        \\\\\\\\\\\\\\\\\\   \\\\\\                                  \\\\\\\\\\\\\\\\'
_darkcoinascii '          \\\\\\\\\\\\\\\\\\   \\                                  \\\\\\\\\\\\\\\\'
_darkcoinascii '            \\\\\\\\\\\\\\\\\\                                    \\\\\\\\\\\\\\\\'
_darkcoinascii '              \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
_darkcoinascii '                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
_darkcoinascii '                  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'

#Check if package 'lsb_release' is installed,
#and if not, install it. (This should only apply to Arch Linux systems.)
_pacman "lsb_release" "lsb-release"
if [[ -z $(ls /bin | grep lsb_release) ]] ; then
	sudo pacman -S lsb-release
fi

#Find name of local distribution and set it as string $distro.
distro=$(lsb_release -a | grep "Distributor ID" | sed 's|Distributor ID\:\s||')
_blue
echo "Distribution is $distro"

#Download scripts for the local distribtion.
case $distro in
	Arch*)
		_darkclone Arch
		;;
	*buntu*|*Mint*)
		_darkclone Ubuntu
		;;
	*)
		echo "Can't figure out what distro you're running. Select one of the following two choices:
	1) $(_green)Arch Linux$(_blue)
	2) $(_green)Ubuntu/Xubuntu/Linux Mint$(_blue)"
		read -p "	==> Select (1/2): " choice
		case $choice in 
			1) _darkclone Arch ;;
			2) _darkclone Ubuntu ;;
		esac
		;;	
esac
_blue
echo "Done! Now run the command below:"
_bold
_white
echo "cd && ./${dabv}1.in"
_tset